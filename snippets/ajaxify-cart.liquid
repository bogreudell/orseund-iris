<script>

Shopify.AjaxifyCart = (function($) {
  
  // Some configuration options.
  // I have separated what you will never need to change from what
  // you might change.
  
  var _config = {
    
    // What you might want to change
    addToCartBtnLabel:             'Add to cart',
    addedToCartBtnLabel:           'Thank you!',
    addingToCartBtnLabel:          'Adding...',
    soldOutBtnLabel:               'Sold Out',
    howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
    cartContainerSelector:         '#cartDrawer',
    cartCountSelector:             '.cart-count, #cart-count a:first, #gocart p a, #cart .checkout em, .item-count',
    cartTotalSelector:             '#cart-price',
    cartDrawerToggle:              '#cartDrawerToggle',
    
    // What you will never need to change
    addToCartBtnSelector:          '[type="submit"]',
    addToCartFormSelector:         'form[action="/cart/add"]',
    shopifyAjaxAddURL:             '/cart/add.js',
    shopifyAjaxChangeURL:          '/cart/change.js',
    shopifyAjaxUpdateURL:          '/cart/update.js',
    shopifyAjaxCartURL:            '/cart.js'
  };

  var _setText = function($button, label) {
    if ($button.children().length) {
      $button.children().each(function() {
        if ($.trim($(this).text()) !== '') {
          $(this).text(label);
        }
      });
    }
    else {
      $button.val(label).text(label);
    }
  };
  
  var _init = function() {   
    $(document).ready(function() {
      // toggle cart
      $(_config.cartDrawerToggle).on('click', function(e){
        // disable default link behavior
        e.stopPropagation();
        e.preventDefault();
        
        // slide in cart drawer ~ need to make this a function
        $('body').addClass('oi_no-scroll');
        $('#cartDrawer *').addClass('no-click');
        $('#cartDrawer').addClass('slide-in');
      });

      // add to cart
      $(_config.addToCartFormSelector).submit(function(e) {
            e.preventDefault();

            var $addToCartForm = $(this);
            var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
            _setText($addToCartBtn, _config.addingToCartBtnLabel);
            $addToCartBtn.addClass('disabled').prop('disabled', true);
            // Add to cart.
            $.ajax({
              url: _config.shopifyAjaxAddURL,
              dataType: 'json',
              type: 'post',
              data: $addToCartForm.serialize(),
              success: function(itemData) {
                // Re-enable add to cart button.
                $addToCartBtn.addClass('inverted');
                _setText($addToCartBtn, _config.addedToCartBtnLabel);
                window.setTimeout(function(){
                  $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
                  _setText($addToCartBtn,_config.addToCartBtnLabel);
                }, _config.howLongTillBtnReturnsToNormal);
                // empty cart element
                $('#cartDrawer #cartDrawerInner #cartDrawerProducts').empty();
                // Update cart count, show cart link, and populate cart in DOM.
                $.getJSON(_config.shopifyAjaxCartURL, function(cart) {
                  $.each(cart.items, function(index, cartItem){
                    var _productTitle = cartItem.product_title,
                        _productVariant = cartItem.variant_title,
                        _productID = cartItem.variant_id,
                        _productPrice = cartItem.price,
                        _productQty = cartItem.quantity,
                        _productImage = cartItem.image,
                        _productHtml = '<div class="oi_cart-item">' +
                                       '<img src="' + _productImage + 
                                       ' alt="' + _productTitle + '" />' +
                                       '<h1 class="custom-font product-description-header">' + _productTitle + '</h1>' + 
                                       '<p>' + _productVariant + '</p>' +
                                       '<p><span class="money">' + Shopify.formatMoney(_productPrice) + '</span></p>' + 
                                       '<p class="cart-drawer__qty">Quantity: <button class="qty-minus">-</button><input data-variant="' + _productID + '" type="number" value="' + _productQty + '"/><button class="qty-plus">+</button></p>' +
                                       '<button class="oi_cart-item__remove">Remove</button>' +
                                       '</div>';

                    $('#cartDrawer #cartDrawerInner #cartDrawerProducts').append(_productHtml);
                    $('.main').addClass('fade-out');
                    $('header').addClass('fade-out');
                    $('body').addClass('oi_no-scroll');
                    $('#cartDrawer *').addClass('no-click');
                    $('#cartDrawer').addClass('slide-in');
                  });
                  // update cart count
                  $(_config.cartCountSelector).html(cart.item_count);
                  //
                  if (_config.cartTotalSelector && $(_config.cartTotalSelector).size()) {
                    if (typeof Currency !== 'undefined' && typeof Currency.moneyFormats !== 'undefined') {
                      var newCurrency = '';
                      if ($('[name="currencies"]').size()) {
                        newCurrency = $('[name="currencies"]').val();
                      }
                      else if ($('#currencies span.selected').size()) {
                        newCurrency = $('#currencies span.selected').attr('data-currency');
                      }
                      if (newCurrency) {
                        $(_config.cartTotalSelector).html('<span class=money>' + Shopify.formatMoney(Currency.convert(cart.total_price, "{{ shop.currency }}", newCurrency), Currency.money_format[newCurrency]) + '</span>');
                      } 
                      else {
                        $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                      }
                    }
                    else {
                      $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                    }
                  };
                });        
              }, 
              error: function(XMLHttpRequest) {
                var response = eval('(' + XMLHttpRequest.responseText + ')');
                response = response.description;
                if (response.slice(0,4) === 'All ') {
                  _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
                  $addToCartBtn.prop('disabled', false);
                  _setText($addToCartBtn, _config.soldOutBtnLabel);
                  $addToCartBtn.prop('disabled',true);
                }
                else {
                  _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
                  $addToCartBtn.prop('disabled', false).removeClass('disabled');
                  _setText($addToCartBtn, _config.addToCartBtnLabel);
                }
              }
            });   
            return false;    
          });

      // update cart item quantities
      $('#cartDrawer').on('change', 'input[type="number"]', function(e){
          var $cartItem = $(this).closest('.oi_cart-item'),
              $lineQty = $(this).val(),
              $lineID = $(this).attr('data-variant');

          $.ajax({
            url: _config.shopifyAjaxUpdateURL,
            dataType: 'json',
            type: 'post',
            data: 'updates[' + $lineID + ']=' + $lineQty,
            success: function(data) {
              if ( $lineQty > 0 ) {
                // update cart quantity displays
                $.getJSON(_config.shopifyAjaxCartURL, function(cart){
                  $(_config.cartCountSelector).html(cart.item_count);
                });
              } else {
                // update cart quantity displays
                $.getJSON(_config.shopifyAjaxCartURL, function(cart){
                  $(_config.cartCountSelector).html(cart.item_count);
                });

                // fade out cart item
                $cartItem.fadeOut(100);

                // remove cart item from DOM after it has faded out
                setTimeout(function(){ 
                  $cartItem.remove() }, 200
                );
              }
            },
            error: function(XMLHttpRequest) {
              // we're not good
            }
          });

          return false;
      });

      // increase cart quantity on + button click
      $('#cartDrawer').on('click', '.qty-plus', function(){
        var $qtyContainer = $(this).closest('.cart-drawer__qty'),
            $qtyInput = $qtyContainer.find('input[type="number"]'),
            $lineID = $qtyInput.attr('data-variant'),
            $lineQty = $qtyInput.val(),
            $updatedQty = Number($lineQty) + 1;

        $.ajax({
          url: _config.shopifyAjaxUpdateURL,
          dataType: 'json',
          type: 'post',
          data: 'updates[' + $lineID + ']=' + $updatedQty,
          success: function(data) {
            // update quantity input value
            $qtyInput.val($updatedQty);

            // update cart quantity displays
            $.getJSON(_config.shopifyAjaxCartURL, function(cart){
              $(_config.cartCountSelector).html(cart.item_count);
            });
          },
          error: function(XMLHttpRequest) {
            // not working
          }
        });
      });

      // decrease cart quantity on - button click
      $('#cartDrawer').on('click', '.qty-minus', function(){
        var $cartItem = $(this).closest('.oi_cart-item'),
            $qtyContainer = $(this).closest('.cart-drawer__qty'),
            $qtyInput = $qtyContainer.find('input[type="number"]'),
            $lineID = $qtyInput.attr('data-variant'),
            $lineQty = $qtyInput.val(),
            $updatedQty = Number($lineQty) - 1;

        $.ajax({
          url: _config.shopifyAjaxUpdateURL,
          dataType: 'json',
          type: 'post',
          data: 'updates[' + $lineID + ']=' + $updatedQty,
          success: function(data) {
            if ( $updatedQty > 0 ) {
              // update quantity input value
              $qtyInput.val($updatedQty);

              // update cart quantity displays
              $.getJSON(_config.shopifyAjaxCartURL, function(cart){
                $(_config.cartCountSelector).html(cart.item_count);
              });  
            } else {
              // keep quantity input value to zero 
              $qtyInput.val('0');

              // update cart quantity displays
              $.getJSON(_config.shopifyAjaxCartURL, function(cart){
                $(_config.cartCountSelector).html(cart.item_count);
              });

              // fade out cart item
              $cartItem.fadeOut(100);

              // remove cart item from DOM after it has faded out
              setTimeout(function(){ 
                $cartItem.remove() }, 200
              );
            }
            
          },
          error: function(XMLHttpRequest) {
            // not working
          }
        });
      });

      // remove item from cart on "remove"
      $('#cartDrawer').on('click', '.oi_cart-item__remove', function(){
        var $cartItem = $(this).closest('.oi_cart-item'),
            $qtyInput = $cartItem.find('input[type="number"]'),
            $lineID = $qtyInput.attr('data-variant'),
            $lineQty = $qtyInput.val();

        $.ajax({
          url: _config.shopifyAjaxUpdateURL,
          dataType: 'json',
          type: 'post',
          data: 'updates[' + $lineID + ']=0',
          success: function() {
            // keep quantity input value to zero 
            $qtyInput.val('0');

            // update cart quantity displays
            $.getJSON(_config.shopifyAjaxCartURL, function(cart){
              $(_config.cartCountSelector).html(cart.item_count);
            });

            // fade out cart item
            $cartItem.fadeOut(100);

            // remove cart item from DOM after it has faded out
            setTimeout(function(){ 
              $cartItem.remove() }, 200
            );
          },
          error: function() {
            // we're not working
          }
        });
      });

      // update cart note
      $('#cartDrawer').on('change', 'textarea', function(){
        var $cartNote = $(this).val();

        $.ajax({
          url: _config.shopifyAjaxUpdateURL,
          dataType: 'json',
          type: 'post',
          data: 'note=' + $cartNote,
          success: function(data) {
            // we're good
          },
          error: function(XMLHttpRequest) {
            // we're good
          }
        });

        // update cart note
        $('#oi_cart-note__save').on('click', function(){
            var $cart = $('#cartDrawer'),
                $cartNoteField = $cart.find('textarea'),
                $saveButton = $(this),
                $cartNote = $cartNoteField.val();

            $.ajax({
              url: _config.shopifyAjaxUpdateURL,
              dataType: 'json',
              type: 'post',
              data: 'note=' + $cartNote,
              success: function(data) {
                // we're good
                $saveButton.text('Note Saved');
              },
              error: function(XMLHttpRequest) {
                // we're good
              }
            });
          });

        return false;
      });
    });

  };
  return {
    init: function(params) {
        // Configuration
        params = params || {};
        // Merging with defaults.
        $.extend(_config, params);
        // Action
        $(function() {
          _init();
        });
    },    
    getConfig: function() {
      return _config;
    }
  }  
})(jQuery);

Shopify.AjaxifyCart.init();

</script>

{% comment %}
  If you want to animate your feedback message.
{% endcomment %}

{% comment %}
{{ '//cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.0/animate.min.css' | stylesheet_tag }}
{% endcomment %}

{{ '//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css' | stylesheet_tag }}

<style>
#cartDrawer {
  z-index: 100000000000 !important;
  position: fixed;
  top: 0;
  right:-100%;
  width: 330px;
  height: 100vh;
  background: rgba(255,255,255,.98);
  border-left:1px solid #000;
  -webkit-transition: .2s right ease-in-out;
  -o-transition: .2s right ease-in-out;
  transition: .2s right ease-in-out;
}

#cartDrawer.fade-in {
  opacity: 1 !important;
}

#cartDrawer.slide-in {
  right:0 !important;
}

#cartDrawerInner {
  z-index: 99999999999999999999999!important;
  position: relative;
  width: 100%;
  height: 100%;
}

#cartDrawerInner > button {
  height: 25px;
  width: 25px;
  padding: 0;
  border: 0;
  position: absolute;
  top: 10px;
  left: 20px;
}

#cartDrawerInner > button:focus {
  outline: none;
}

#cartDrawerInner > h1 {
  padding: 5% 0;
  text-align: center;
}

#cartDrawerProducts {
    width: 100%;
    height: 78vh;
    padding: 0 20px 20px 20px;
    overflow-y:scroll;
}

.oi_cart-item {
  margin-bottom:30px;
}

.oi_cart-item img {
  width:100%;
  height:auto;
}

.oi_cart-item h1 {
  margin:20px 0 10px;
}

.oi_cart-item p {
  margin: 0;
  font-size: 11px;
  text-transform: uppercase;
  line-height: 1.75rem;
  letter-spacing: 0.075rem;
}

.oi_cart-item .cart-drawer__qty button {
  border: 0;
  background: none;
  font-weight: 700;
}

.oi_cart-item .cart-drawer__qty button:focus {
  outline: none;
}

.oi_cart-item .cart-drawer__qty input[type="number"] {
  border: 0;
  width: 40px;
  text-align: center;
  padding-left: 14px;
}

.oi_cart-item .cart-drawer__qty input[type="number"]:focus {
  outline: none;
}

.oi_cart-item button.oi_cart-item__remove {
  letter-spacing: 0.075rem;
  color: grey;
  line-height: 17.5px;
  font-size: 12px;
  text-decoration: underline;
  padding: 0;
  border: 0;
}

.oi_cart-item button.oi_cart-item__remove:focus {
  outline: none;
}

#cartDrawerContent .cart-drawer-textarea-wrap {
  position: relative;
}

.cart-drawer-textarea-wrap #oi_cart-note__save {
  position: absolute;
  right: 20px;
  top: 12px;
  background: 0;
  border: 0;
  padding: 0;
  font-size: 1.2rem;
  letter-spacing: 0.075rem;
  text-transform: uppercase;
  font-weight: 700;
}

.cart-drawer-textarea-wrap #oi_cart-note__save:focus {
  outline: none;
}

#cartDrawerContent textarea {
  width: 100%;
  height: 8vh;
  border: 0px;
  padding: 10px 20px;
  margin: 0px;
  letter-spacing: 0.075rem;
  color: grey;
  z-index: auto;
  position: relative;
  line-height: 17.5px;
  font-size: 12px;
  transition: none 0s ease 0s;
  background: rgba(255,255,255,.95) !important;
  resize: none;
}

#cartDrawerContent textarea::-webkit-input-placeholder { /* Chrome/Opera/Safari */
  text-decoration: underline;
}
#cartDrawerContent textarea::-moz-placeholder { /* Firefox 19+ */
  text-decoration: underline;
}
#cartDrawerContent textarea:-ms-input-placeholder { /* IE 10+ */
  text-decoration: underline;
}
#cartDrawerContent textarea:-moz-placeholder { /* Firefox 18- */
  text-decoration: underline;
}

#cartDrawerContent textarea:focus {
  outline: none;
}

input.proceedToCart {
    position: absolute;
    bottom: 0;
    width: 100%;
    border: 0;
    padding: 8% 0;
    background: #000;
    color: #fff;
    text-align: center;
    font-size: 1rem;
    letter-spacing: 0.4rem;
    text-transform: uppercase;
    font-weight: 700;
}
input.proceedToCart:hover {
  outline: none;
  border: 0;
  background: #000;
  color: #fff;
  text-decoration: none;
}
input.proceedToCart:focus {
  outline: none;
}
@media all and (max-width:768px) {
  #cartDrawer {
    width: 100% !important;
    border: 0 !important;
  }
  #cartDrawerInner {
    overflow-y: scroll !important;
    padding-bottom: 100px;
  }
  #cartDrawerInner > button {
    top: 10px !important;
  }
  #cartDrawerProducts {
    height: initial !important;
    overflow-y: auto !important;
  }
  input.proceedToCart {
    position: relative;
  }
}
</p>
</style>